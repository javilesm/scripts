#!/bin/bash
# s3snap.sh
# Variables
CURRENT_DIR="$( cd "$( dirname "${0}" )" && pwd )" # Obtener el directorio actual
PARENT_DIR="$( dirname "$CURRENT_DIR" )" # Get the parent directory of the current directory
AWS_CONFIG="$PARENT_DIR/AWS/aws_config.sh"
SOURCE_DIR=$(dirname "$(readlink -f "$0")") # Obtener el directorio padre del script
BUCKET="s3://ec2-safety-vault" # Bucket de Amazon S3 para el respaldo
DESTINATION_DIR="$BUCKET/vol-07fa8e9b466bbe2eb" # Directorio de respaldo remoto
BACKUP_DIR="backups" # Directorio de respaldo local
BACKUP_PATH="$HOME/$BACKUP_DIR" # Ruta del directorio local
BACKUP_FILE="backup_$SOURCE_DIR_$(date +%Y%m%d_%H%M%S).tar.gz" # Nombre del archivo de respaldo
source "$AWS_CONFIG"
# Funcion para comprobar si el directorio de respaldo existe
function check_backup_path() {
    # Comprobar si el directorio de respaldo existe
    echo "Comprobando si el directorio de respaldo existe..."
    if [ ! -d "$BACKUP_PATH" ]; then
        echo "El directorio de respaldo no existe. Creando directorio..."
        sudo mkdir -p "$BACKUP_PATH"
    fi
}
# Funcion para limpiar respaldos viejos
function clean_up() {
    # Comprobar si hay archivos en el directorio de respaldo
    echo "Comprobando si hay archivos en el directorio de respaldo..."
    shopt -s nullglob
    files=("$BACKUP_PATH"/*)
    if [ ${#files[@]} -eq 0 ]; then
        echo "ADVERTENCIA: No hay archivos en el directorio de respaldo."
        return
    fi

    # Limpiar respaldos viejos
    echo "Limpiando respaldos viejos..."
    sudo rm -f ${BACKUP_PATH:?}/*
    sleep 5
}
# Funcion para comprimir el directorio de origen en un archivo tar.gz
function compress_source(){
    # comprimir el directorio de origen en un archivo tar.gz
    echo "Comprimiendo el directorio '$SOURCE_DIR' con destino '$BACKUP_PATH'..."
    sudo tar czf "$BACKUP_PATH/$BACKUP_FILE" -C "$SOURCE_DIR" .
    sleep 5
}
# Funcion para copiar el archivo de respaldo a S3 utilizando awscli
function s3_sync() {
    echo "Sincronizando con S3..."
    aws s3 sync $BACKUP_PATH $DESTINATION_DIR
    echo "Copia de seguridad realizada con exito..."
}
# Funcion principal
function s3snap() {
    check_backup_path
    clean_up
    compress_source
    s3_sync
}
# Llamar a la funcion principal
s3snap
