#!/bin/bash
# map_s3.sh
# Variables
CURRENT_DIR="$( cd "$( dirname "${0}" )" && pwd )" # Obtener el directorio actual
PARENT_DIR="$( dirname "$CURRENT_DIR" )" # Get the parent directory of the current directory
CONFIRM_SCRIPT="$CURRENT_DIR/confirm"
S3_BUCKET="ec2-safety-vault"
S3_CREDENTIALS_FILE=".s3"

# Encontrar archivo con las credenciales de acceso a AWS S3
function find_s3_credentials_file() {
  S3_PASSWD_FILE=$(find $HOME -type f -name "${S3_CREDENTIALS_FILE}")
  echo "La ruta a las credenciales de acceso es: $S3_PASSWD_FILE"
}
# Obtener el punto de montaje
function get_mounting_point() {
  read -p "Ingrese el punto de montaje: " MOUNTING_POINT

    # Validar si el punto de montaje es válido
    if [[ ! -z "$MOUNTING_POINT" ]]; then
      # Eliminar espacios en blanco iniciales y finales
      MOUNTING_POINT=$(echo "$MOUNTING_POINT" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')

      # Reemplazar espacios en blanco internos por guiones bajos
      MOUNTING_POINT=$(echo "$MOUNTING_POINT" | tr ' ' '_')

      # Verificar si el punto de montaje existe
      if [[ -d "$MOUNTING_POINT" ]]; then
        echo "El punto de montaje '$MOUNTING_POINT' ya existe."
      else
        # Comprobar si se tienen permisos de escritura en el directorio padre
        local parent_dir=$(dirname "$MOUNTING_POINT")
        if [[ -w "$parent_dir" ]]; then
          valid_mounting_point=true
          echo "El punto de montaje ingresado es: $MOUNTING_POINT"
        else
          echo "No se tienen permisos de escritura en el directorio padre '$parent_dir'."
        fi
      fi
    else
      echo "El punto de montaje no puede estar vacío."
    fi
}

function check_mounting_path() {
  MOUNTING_PATH="/var/$MOUNTING_POINT"
    # verificar la existencia del punto de montaje
    echo "Verificando la existencia del directorio temporal..."
    if [ -d "$MOUNTING_PATH" ]; then
        echo "El punto de montaje '$MOUNTING_PATH' existe."
    else
        echo "ERROR: El punto de montaje '$MOUNTING_PATH' no existe."
        echo "Creando el punto de montaje '$MOUNTING_PATH'."
        sudo mkdir -p "$MOUNTING_PATH" 
        sudo chmod 777 "$MOUNTING_PATH"
    fi
}
function mount_bucket() {
  echo "Montando el bucket: '$S3_BUCKET' --> '$MOUNTING_PATH'"
  if sudo s3fs "$S3_BUCKET" "$MOUNTING_PATH" -o passwd_file=$S3_PASSWD_FILE -o nonempty; then
    echo "El bucket '$S3_BUCKET' fue montado en '$MOUNTING_PATH'."
  else
    echo "Error al montar el bucket '$S3_BUCKET' en '$MOUNTING_PATH'."
  fi
}
# Agregar entradas en /etc/fstab para montar las particiones al reiniciar el sistema
function edit_fstab() {
    local formato=""
  # Agregar entradas en /etc/fstab para montar las particiones al reiniciar el sistema
  echo "Agregar entradas en /etc/fstab para montar bucket '$S3_BUCKET' al reiniciar el sistema..."
  echo "${S3_BUCKET//\"/} ${MOUNTING_PATH//\"/} ${formato//\"/} defaults 0 0" | sudo tee -a /etc/fstab
}

function map_s3() {
  echo "****************MAP S3****************"
  find_s3_credentials_file
  get_mounting_point
  check_mounting_path
  mount_bucket
  edit_fstab
  echo "****************ALL DONE****************"
}
map_s3
